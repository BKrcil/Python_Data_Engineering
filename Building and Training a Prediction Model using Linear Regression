Objectives
After completing this lab you will be able to:

Use Pandas to load data sets.
Identify the target and features.
Use Linear Regression to build a model to predict car mileage.
Use metrics to evaluate the model.
Make predictions using a trained model.
Datasets
In this lab you will be using dataset(s):

Modified version of car mileage dataset. Available at https://archive.ics.uci.edu/ml/datasets/auto+mpg
Modified version of diamonds dataset. Available at https://www.openml.org/search?type=data&sort=runs&id=42225&status=active
Setup
For this lab, we will be using the following libraries:

pandas for managing the data.
sklearn for machine learning and machine-learning-pipeline related functions.
Installing Required Libraries
The following required libraries are pre-installed in the Skills Network Labs environment. However, if you run this notebook commands in a different Jupyter environment (e.g. Watson Studio or Ananconda), you will need to install these libraries by removing the # sign before !pip in the code cell below.

# All Libraries required for this lab are listed below. The libraries pre-installed on Skills Network Labs are commented.
pip install pandas==1.3.4
pip install scikit-learn==1.0.2
pip install numpy==1.21.6

# You can also use this section to suppress warnings generated by your code:
def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings('ignore')
Importing Required Libraries
import pandas as pd
from sklearn.linear_model import LinearRegression


Task 1 - Load the data in a csv file into a dataframe
# the data set is available at the url below.
URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-BD0231EN-SkillsNetwork/datasets/mpg.csv"
​
# using the read_csv function in the pandas library, we load the data into a dataframe.
​
df = pd.read_csv(URL)
Let's look at some sample rows from the dataset we loaded:

# show 5 random rows from the dataset


df.sample(5)


MPG	Cylinders	Engine Disp	Horsepower	Weight	Accelerate	Year	Origin
266	21.6	4	121.0	115	2795	15.7	78	European
200	13.0	8	318.0	150	3940	13.2	76	American
115	29.0	4	68.0	49	1867	19.5	73	European
176	24.0	4	119.0	97	2545	17.0	75	Japanese
375	28.0	4	120.0	79	2625	18.6	82	American


Let's find out the number of rows and columns in the dataset:

df.shape

(392, 8)

Let's create a scatter plot of Horsepower versus mileage(MPG) . This will help us visualize the relationship between them.

df.plot.scatter(x = "Horsepower", y = "MPG")

<AxesSubplot:xlabel='Horsepower', ylabel='MPG'>

You are encouraged to create more plots to visualize relationships amongst other columns

Task 2 - Identify the target column and the data columns
First we identify the target. Target is the value that our machine learning model needs to predict

target = df["MPG"]

We identify the features next. Features are the values our machine learning model learns from

features = df[["Horsepower","Weight"]]

Task 3 - Build and Train a Linear Regression Model
Create a LR model

lr = LinearRegression()

Train/Fit the model

lr.fit(features,target)
LinearRegression()

Task 4 - Evaluate the model and make predictions
Your model is now trained. Time to evaluate the model.

#Higher the score, better the model.
lr.score(features,target)

0.7063752737298348

Make predictions. Let us predict the mileage for a car with HorsePower = 100 and Weight = 2000

lr.predict([[100,2000]])

array([29.3216098])

# 29.3216098 miles per gallon is the mileage of a car with HorsePower = 100 and Weight = 2000

Exercises
URL2 = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-BD0231EN-SkillsNetwork/datasets/diamonds.csv"
Exercise 1 - Loading a dataset (diamond dataset)
_
df2 = pd.read_csv(URL2)

Exercise 2 - Identify the target column and the data columns
use the price column as target
use the columns carat and depth as features

target = df2['price']
features = df2[['carat','depth']]

Exercise 3 - Build and Train a new Linear Regression Model
Create a new Linear Regression Model


lr2 = LinearRegression()
lr2.fit(features,target)



Exercise 4 - Evaluate the model
Print the score of the model


lr2.score(features,target)




Exercise 5 - Predict the price of a diamond
Predict the price of a diamond with carat = 0.3 and depth = 60

lr2.predict([[0.3, 60]])
