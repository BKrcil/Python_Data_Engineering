Scenario:
You are a data engineer at a data analytics consulting company. You have been assigned to a project that aims to de-congest the national highways by analyzing the road traffic data from different toll plazas.
 As a vehicle passes a toll plaza, the vehicle’s data like vehicle_id,vehicle_type,toll_plaza_id and timestamp are streamed to Kafka. Your job is to create a data pipe line that collects the streaming data and loads it into a database.

Exercise 1 - Prepare the lab environment
Before you start the assignment, complete the following steps to set up the lab:

Step 1: Download Kafka.

wget https://archive.apache.org/dist/kafka/2.8.0/kafka_2.12-2.8.0.tgz

Step 2: Extract Kafka.

tar -xzf kafka_2.12-2.8.0.tgz

Step 3: Start MySQL server.

Step 4: On the launching page, click on the ‘Start’ button.

Step 5: Once the MySQL server started, select the ‘Connection Information’ tab. From that copy the password.

Step 6: Connect to the mysql server, using the command below in the terminal. Make sure you use the password given to you when the MySQL server starts. Please make a note or record of the password because you will need it later.

mysql --host=mysql --port=3306 --user=root --password=zB23CJdHypFcG6TRxEO4jXv9

Step 7: Create a database named tolldata

create database tolldata;

use tolldata;

Step 8: Create a table named livetolldata with the schema to store the data generated by the traffic simulator.

use tolldata;

create table livetolldata(timestamp datetime,vehicle_id int,vehicle_type char(15),toll_plaza_id smallint);

Step 9: Disconnect from MySQL server.

exit

Step 10: Install the python module kafka-python using the pip command

python3 -m pip install kafka-python

Step 11: Install the python module mysql-connector-python using the pip command.

python3 -m pip install mysql-connector-python==8.0.31

Exercise 2 - Start Kafka


Task 2.1 - Start Zookeeper

cd kafka_2.12-2.8.0

bin/zookeeper-server-start.sh config/zookeeper.properties


Task 2.2 - Start Kafka server

bin/kafka-server-start.sh config/server.properties




Task 2.3 - Create a topic named toll

bin/kafka-topics.sh --create --topic toll --bootstrap-server localhost:9092



Task 2.4 - Download the Toll Traffic Simulator

wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DB0250EN-SkillsNetwork/labs/Final%20Assignment/toll_traffic_generator.py

Open the code using the theia editor using the “Menu –> File –>Open” option.




Task 2.5 - Configure the Toll Traffic Simulator
Open the toll_traffic_generator.py and set the topic to toll.



Task 2.6 - Run the Toll Traffic Simulator
Run the toll_traffic_generator.py.

python3 toll_traffic_generator.py



Task 2.7 - Configure streaming-data-reader.py
Download the streaming-data-reader.py from the url below using ‘wget’.

wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/vVxmU5uatDowvAIKRZrFjg/streaming-data-reader.py

Open the streaming_data_reader.py and modify the following details so that the program can connect to your mysql server.

TOPIC='toll'

DATABASE='tolldata'

USERNAME='root'

PASSWORD='password'




Task 2.8 - Run streaming_data_reader.py
Run the streaming_data_reader.py

python3 streaming-data-reader.py



select * from livetolldata order by timestamp desc;

